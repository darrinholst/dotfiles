# cat << ►_◄ > /dev/null
#
#  This amazing way to embed shell scripts in here was lifted
#  from https://github.com/gpakosz/.tmux. 👏

# Unbind all keys
unbind-key -a

# My prefix is Ctrl-s
set -g prefix 'C-s'

set-option -g default-shell /bin/zsh
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind          '{' swap-pane -U
bind          '}' swap-pane -D
bind          '#' list-buffers
bind          '$' command-prompt 'rename-session %%'
bind          ',' command-prompt 'rename-window %%'
bind          '.' command-prompt "move-window -t '%%'"
bind          '1' select-window -t :1
bind          '2' select-window -t :2
bind          '3' select-window -t :3
bind          '4' select-window -t :4
bind          '5' select-window -t :5
bind          '6' select-window -t :6
bind          '7' select-window -t :7
bind          '8' select-window -t :8
bind          '9' select-window -t :9
bind          ':' command-prompt
bind          '\;' last-pane
bind          '=' choose-buffer
bind          '?' list-keys
bind          '[' copy-mode
bind          ']' paste-buffer
bind          'b' list-buffers
bind          'p' paste-buffer
bind          'P' choose-buffer
bind          'c' new-window -c "#{pane_current_path}"
bind          'd' detach-client
bind          'f' command-prompt "find-window '%%'"
bind          'h' select-pane -L
bind          'j' select-pane -D
bind          'k' select-pane -U
bind          'l' select-pane -R
bind          'n' next-window
bind          'o' select-pane -t :.+
bind          'R' send-keys -R
bind          'r' source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
bind          's' split-window -v -c "#{pane_current_path}"
bind          't' clock-mode
bind          'v' split-window -h -c "#{pane_current_path}"
bind          'w' choose-window
bind          'x' confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind          'z' resize-pane -Z
bind          Tab last-window # move to last active window
bind        Enter copy-mode # enter copy mode
bind        Space next-layout
bind -n       C-l send-keys C-l \; run 'sleep 0.05 && tmux clear-history'
bind -r      M-Up resize-pane -U 5
bind -r    M-Down resize-pane -D 5
bind -r    M-Left resize-pane -L 5
bind -r   M-Right resize-pane -R 5
bind -n    S-Left previous-window
bind -n   S-Right next-window
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

#bind-key -n       C-x clear-history\; send-keys 'C-z'\; send-keys 'C-l'\; send-keys 'Enter'\; send-keys 'C-l'\; send-keys 'fg'\; send-keys 'Enter'\; send-keys 'C-l'\; clear-history
#bind-key        C-b send-prefix
#bind-key        C-o rotate-window
#bind-key        C-z suspend-client
#bind-key          ! break-pane
#bind-key          " split-window
#bind-key          % split-window -h
#bind-key          & confirm-before -p "kill-window #W? (y/n)" kill-window
#bind-key          ' command-prompt -p index "select-window -t ':%%'"
#bind-key          ( switch-client -p
#bind-key          ) switch-client -n
#bind-key          - delete-buffer
#bind-key          0 select-window -t :0
#bind-key          D choose-client
#bind-key          H resize-pane -L 5
#bind-key          J resize-pane -D 5
#bind-key          K resize-pane -U 5
#bind-key          L resize-pane -R 5
#bind-key          d detach-client
#bind-key          i display-message
#bind-key          q display-panes
#bind-key          r source-file /Users/darrinholst/.tmux.conf
#bind-key          ~ show-messages
#bind-key      PPage copy-mode -u
#bind-key -r      Up select-pane -U
#bind-key -r    Down select-pane -D
#bind-key -r    Left select-pane -L
#bind-key -r   Right select-pane -R
#bind-key        M-1 select-layout even-horizontal
#bind-key        M-2 select-layout even-vertical
#bind-key        M-3 select-layout main-horizontal
#bind-key        M-4 select-layout main-vertical
#bind-key        M-5 select-layout tiled
#bind-key        M-h resize-pane -L
#bind-key -n     M-h select-pane -L
#bind-key        M-j resize-pane -D
#bind-key -n     M-j select-pane -D
#bind-key        M-k resize-pane -U
#bind-key -n     M-k select-pane -U
#bind-key -n     M-l select-pane -R
#bind-key        M-l resize-pane -R
#bind-key        M-n next-window -a
#bind-key        M-o rotate-window -D
#bind-key        M-p previous-window -a
#bind-key -n    M-Up select-pane -U
#bind-key -n  M-Down select-pane -D
#bind-key -n  M-Left select-pane -L
#bind-key -n M-Right select-pane -R
#bind-key -r    C-Up resize-pane -U
#bind-key -r  C-Down resize-pane -D
#bind-key -r  C-Left resize-pane -L
#bind-key -r C-Right resize-pane -R

# 0 is too far from 1
set -g base-index 1

# Automatically set window title
setw -g automatic-rename on

set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

# renumber windows when a window is closed
set -g renumber-windows on

set -g status-keys vi
set -g history-limit 1000000
#set -g status-interval 10 # redraw status line every 10 seconds

setw -g mode-keys vi
setw -g monitor-activity on

# No delay for escape key press
set -sg escape-time 0

# mouse scroll buffer outside copy mode
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g mouse on
set -g @scroll-without-changing-pane "on"
set -g @scroll-speed-num-lines-per-scroll "1"

# need this to autosave in vim on lost focus
set -g focus-events on

# status bar
if-shell "test -f /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf" "source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"
if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

bind-key 'y' save-buffer ~/.tmux-buffer \; run-shell "cat ~/.tmux-buffer | pbcopy"

# ►_◄
#
# _battery() {
#   if [[ `pmset -g batt | grep -c "AC Power"` > 0 ]]; then
#     echo ""
#   else
#     pmset -g batt | grep -o -e "\d\{1,\}%"
#   fi
# }
#
# _hostname() {
#   tty=${1:-$(tmux display -p '#{pane_tty}')}
#   ssh_only=$2
#   ssh_parameters=$(ps -t "$tty" -o command= | awk '/ssh/ && !/autossh/ && !/-W/ { $1=""; print $0; exit }')
#
#   if [ -n "$ssh_parameters" ]; then
#     hostname=$(ssh -G $ssh_parameters 2>/dev/null | awk 'NR > 2 { exit } ; /^hostname / { print $2 }')
#     [ -z "$hostname" ] && hostname=$(ssh -T -o ControlPath=none -o ProxyCommand="sh -c 'echo %%hostname%% %h >&2'" $ssh_parameters 2>&1 | awk '/^%hostname% / { print $2; exit }')
#     hostname=$(echo "$hostname" | awk '\
#     { \
#       if ($1~/^[0-9.:]+$/) \
#         print $1; \
#       else \
#         split($1, a, ".") ; print a[1] \
#     }')
#   else
#     if ! _is_enabled "$ssh_only"; then
#       hostname=$(command hostname -s)
#     fi
#   fi
#
#   echo "$hostname"
# }
#
# "$@"
