set guifont=Anonymous\ Pro:h18
let mapleader = ","

:au BufRead,BufNewFile *.json set filetype=json
:au FocusLost * :call SaveAll()

function! SaveAll()
  try
    wa
  catch
    " ignore
  endtry
endfunction

" set visual bell -- i hate that damned beeping
set vb

" Make sure that unsaved buffers that are to be put in the background are
" allowed to go in there (ie. the "must save first" error doesn't come up)
set hidden

" Turn off that stupid highlight search
nmap <silent> ,n :set invhls<CR>:set hls?<CR>

"-----------------------------------------------------------------------------
" Window Commands
"-----------------------------------------------------------------------------
noremap <silent> ,h :wincmd h<CR>
noremap <silent> ,j :wincmd j<CR>
noremap <silent> ,k :wincmd k<CR>
noremap <silent> ,l :wincmd l<CR>
noremap <silent> ,cj :wincmd j<CR>:close<CR>
noremap <silent> ,ck :wincmd k<CR>:close<CR>
noremap <silent> ,ch :wincmd h<CR>:close<CR>
noremap <silent> ,cl :wincmd l<CR>:close<CR>
noremap <silent> ,cc :close<CR>
noremap <silent> ,cw :cclose<CR>

"-----------------------------------------------------------------------------
" Buffer Commands
"-----------------------------------------------------------------------------
noremap <silent> ,bd :bd<CR>
noremap <silent> ,bb :BufExplorer<CR>
map <C-Tab> :bu #<cr>

"-----------------------------------------------------------------------------
" NERD Tree Plugin Settings
"-----------------------------------------------------------------------------
nmap <F7> :NERDTreeToggle<CR>

"-----------------------------------------------------------------------------
" Auto commands
"-----------------------------------------------------------------------------
augroup cleanup_files
  au!
  au BufWritePre *.css,*.html,*.json,*.js,*.rb :call <SID>StripTrailingWhitespaces()
  au BufWritePre *.css,*.html,*.json,*.js,*.rb retab!
augroup END

"-----------------------------------------------------------------------------
" JSON prettifier
"-----------------------------------------------------------------------------
map ,jt <Esc>:%!json_xs -f json -t json-pretty<CR>
au BufRead,BufNewFile *.json set filetype=json

"-----------------------------------------------------------------------------
" Ack
"-----------------------------------------------------------------------------
map ,a :Ack<space>

"-----------------------------------------------------------------------------
" Cleanup after save
"-----------------------------------------------------------------------------
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

function! Ruby_eval() range
  let src = tempname()
  let dst = "Ruby Output"

  " put current buffer's content in a temp file
  silent execute ": " . a:firstline . "," . a:lastline . "w " . src

  " open the preview window
  silent execute ":pedit! " . dst

  " change to preview window
  wincmd P

  " set options
  setlocal buftype=nofile
  setlocal noswapfile
  setlocal syntax=none
  setlocal bufhidden=delete

  " replace current buffer with ruby's output
  silent execute ":%! ruby " . src . " 2>&1 "

  " change back to the source buffer
  wincmd p
endfunction

vmap <silent> <F8> :call Ruby_eval()<CR>
nmap <silent> <F8> mzggVG<F8>`z
imap <silent> <F8> <Esc><F8>a
map <silent> <S-F8> <C-W>l:bw<CR>
imap <silent> <S-F8> <Esc><S-F8>a

